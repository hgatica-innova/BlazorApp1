@page "/todo"
@rendermode InteractiveServer

<!--h3>Todo (@todos.Count(todo => !todo.IsDone))</!--h3-->
<h3>Blogs</h3>

<input @bind="newTodo" />
<button @onclick="AddTodo">Create</button>
<button @onclick="Leer">Read</button>

@code {
    private List<Intro.Blog> blogs = new(0);
    string newTodo = "";

    void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            using (var db = new Intro.BloggingContext())
            {
                var blog = new Intro.Blog { Url = newTodo };
                db.Blogs.Add(blog);
                db.SaveChanges();

                Leer();
            }

            //blogs.Add(new Intro.Blog { Url = newTodo });
            newTodo = string.Empty;
        }
    }

    void Leer()
    {
        using (var db = new Intro.BloggingContext())
        {
            blogs = db.Blogs
                .OrderBy(b => b.BlogId)
                .ToList();

            foreach (var blog in blogs)
            {
                using (var db2 = new Intro.BloggingContext())
                {
                    blog.Posts = db.Posts
                        .Where(p => p.BlogId == blog.BlogId)
                        .ToList();
                }
            }
        }
    }

    void Update(Intro.Blog mBlog)
    {
        Console.WriteLine($"update {mBlog.BlogId}");
        using (var context = new Intro.BloggingContext())
        {
            var blog = context.Blogs.Single(b => b.BlogId == mBlog.BlogId);
            blog.Url = mBlog.Url;
            context.SaveChanges();
        }
    }

    void Delete(Intro.Blog mBlog)
    {
        Console.WriteLine($"update {mBlog.BlogId}");
        using (var context = new Intro.BloggingContext())
        {
            var blog = context.Blogs.Single(b => b.BlogId == mBlog.BlogId);
            context.Blogs.Remove(blog);
            context.SaveChanges();
            Leer();
        }
    }

    void UpdatePost(Intro.Post mPost)
    {
        using (var context = new Intro.BloggingContext())
        {
            var blog = context.Posts.Single(b => b.PostId == mPost.PostId);
            blog.Title = mPost.Title;
            blog.Content = mPost.Content;
            context.SaveChanges();
        }
    }

    void DeletePost(Intro.Post mPost)
    {
        using (var context = new Intro.BloggingContext())
        {
            var blog = context.Posts.Single(b => b.PostId == mPost.PostId);
            context.Posts.Remove(blog);
            context.SaveChanges();
            Leer();
        }
    }

    void AddDetail(Intro.Blog mBlog)
    {
        if (!string.IsNullOrWhiteSpace(mBlog.NewPostTitle) && !string.IsNullOrWhiteSpace(mBlog.NewPostContent))
        {
            using (var db = new Intro.BloggingContext())
            {
                var post = new Intro.Post { Title = mBlog.NewPostTitle, Content = mBlog.NewPostContent, BlogId = mBlog.BlogId };
                db.Posts.Add(post);
                db.SaveChanges();

                Leer();
            }

            newTodo = string.Empty;
        }
    }

}

<ul>
    @foreach (var todo in blogs)
    {
        <li>
            <input type="hidden" @bind="todo.BlogId" />
            <input @bind="todo.Url" />
            <button @onclick="() => Update(todo)">Update</button>
            <button @onclick="() => Delete(todo)">Delete</button>

            <input @bind="todo.NewPostTitle" />
            <input @bind="todo.NewPostContent" />
            <button @onclick="() => AddDetail(todo)">Add Detail</button>

            <ul id="detail-@todo.BlogId">
                @foreach(var post in todo.Posts)
                {
                    <li>
                        <input @bind="post.Title" />
                        <input @bind="post.Content" />
                        <button @onclick="() => UpdatePost(post)">Update</button>
                        <button @onclick="() => DeletePost(post)">Delete</button>
                    </li>
                }
            </ul>
        </li>
    }
</ul>